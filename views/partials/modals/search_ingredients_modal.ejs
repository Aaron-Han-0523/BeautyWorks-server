<div class="modal" id="select_ingredients" data-bs-scroll="true" data-bs-backdrop="true">
  <div class="modal-dialog modal-dialog-scrollable m-0" style="max-width: 100%; max-height:90vh">
    <div class="modal-content br-10 mx-auto" style="max-width: 100%; width: 82.5%; height: 57.5rem; margin-top:5.9rem">
      <div class="modal-header justify-content-end text-gray p-3">
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
          <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
        </button>
      </div>
      <div class="modal-body py-0" style="border-top:0px;">
        <form id="search_ingredients">
          <div class="form-group" style="margin: 0 10rem;">
            <!-- 통합 검색-->
            <div class="d-flex">
              <label class="col-2  text-black align-self-center mb-0">
                <%= __('통합 검색') %>
              </label>
              <div class="col form-control d-flex p-0">
                <input name="ingredient_name" class="col form-control" placeholder="<%= __('plzInputText') %>">
                <button class="col-1 form-control text-primary p-0" type="button" onclick="searching_ingredients();"><i class="fa-solid fa-magnifying-glass"></i></button>
              </div>
            </div>
            <!-- 종류/기능 검색-->
            <div class="d-flex mt-3">
              <!-- 컨셉성분 종류 -->
              <label class="col-2  text-black align-self-center mb-0">
                <%= __('ingredients.종류') %>
              </label>
              <!-- <input hidden name="type"> -->
              <div class="col-4">
                <button class="form-select text-start" type="button" id="select_type" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                  <%= __('Select') %>
                </button>
                <ul class="dropdown-menu" aria-labelledby="select_type">
                  <% codezip.ingredient_type.forEach((code,index)=>{ %>
                  <li class="dropdown-item d-flex">
                    <input class="form-check-input mx-3 ingredient_type" name="type" type="checkbox" id="ingredient_type-<%= code %>" value="<%= code %>">
                    <label class="form-check-label flex-fill pe-3 ingredient_type-label" for="ingredient_type-<%= code %>">
                      <%= __(code) %>
                    </label>

                  </li>
                  <% }) %>
                </ul>
              </div>
              <!-- 컨셉성분 기능 -->
              <label class="col-2  text-black align-self-center mb-0 ps-4 text-start">
                <%= __('ingredients.기능') %>
              </label>
              <div class="col-4">
                <button class="form-select text-start" type="button" id="select_effects" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                  <%= __('Select') %>
                </button>
                <ul class="dropdown-menu scrollable-menu" aria-labelledby="select_effects">
                  <% codezip.effects.ingredient.forEach((code, index)=>{ %>
                  <li class="dropdown-item d-flex">
                    <input class="form-check-input mx-3 ingredient_effects" name="effects" type="checkbox" id="ingredient_effects-<%= code %>" value="<%= code %>">
                    <label class="form-check-label flex-fill pe-3 ingredient_effects-label" for="ingredient_effects-<%= code %>">
                      <%= __(code) %>
                    </label>
                  </li>
                  <% }) %>
                </ul>
              </div>
            </div>
          </div>
        </form>
        <!-- 결과 테이블 -->
        <div class="table-responsive mt-4 pt-4 mb-auto mx-auto" style="width: 97.5%; font-size: 1.125rem;
        ; font-weight:400;">
          <table class="table table-no-space table-bordered table-hover text-break br-10 w-100">
            <thead class="text-center">
              <th>
              </th>
              <th>
                <%= __('ingredients.성분명') %>
              </th>
              <th>
                <%= __('ingredients.원료명') %>
              </th>
              <th>
                <%= __('ingredients.종류') %>
              </th>
              <th>
                <%= __('ingredients.기능') %>
              </th>
              <th>
                <%= __('ingredients.특징') %>
              </th>
            </thead>
            <tbody class="table-group-divider bbr-15" id="ingredients_result" style="color: var(--BW-gray-128);">

            </tbody>
          </table>
        </div>

        <!-- pagination -->
        <div id="ingredients_pagination" class="">

        </div>
      </div>
    </div>
  </div>
</div>
<div>
  <%
  let ingredient_type_text_dict = {};
  codezip.ingredient_type.forEach((code, index)=>{
    ingredient_type_text_dict[code] = __(code);
  })
  let ingredient_effects_text_dict = {};
  codezip.effects.ingredient.forEach((code, index)=>{
    ingredient_effects_text_dict[code] = __(code);
  })
  %>
</div>
<script>
  const ingredient_type_text_dict = JSON.parse('<%- JSON.stringify(ingredient_type_text_dict) %>');
  const ingredient_effects_text_dict = JSON.parse('<%- JSON.stringify(ingredient_effects_text_dict) %>');

  function searching_ingredients(page = 1) {
    let search_params = new URLSearchParams(new FormData(search_ingredients))
    search_params.set('p', page)
    const url = '<%= codezip.url.users.api.ingredient %>?' + search_params;
    fetch(url).then(res => {
      ingredients_reload(res.json());
    })
  }

  search_ingredients.onsubmit = (event) => {
    event.preventDefault();
    searching_ingredients();
  }

  function ingredients_reload(res_json) {
    res_json.then(result => {
      // console.log(result);
      let ingredients = result.ingredients;
      let temp_html = "";

      ingredients.rows.forEach((item, index) => {
        let ingredient_effects = [];
        if (item.effects) {
          item.effects.split(',').forEach((code, index) => {
            ingredient_effects.push(ingredient_effects_text_dict[code])
          })
        }

        temp_html += `<tr onclick="select_ingredient('${item.id}');">
          <td class="text-center"><input type="checkbox" class="form-check-input ingredient-checkbox opacity-100" id="ingredient-${item.id}"></td>
          <td id="${item.id}-ingredient_name"><label for="ingredient-${item.id}">${item.ingredient_name}</label></td>
          <td><label for="ingredient-${item.id}">${item.material_name}</label></td>
          <td><label for="ingredient-${item.id}">${ingredient_type_text_dict[item.type]}</label></td>
          
          <td><label for="ingredient-${item.id}">${ingredient_effects.join(', ')}</label></td>
          <td><label for="ingredient-${item.id}">${item.feature ? item.feature : ''}</label></td>
        </tr>`
      })
      ingredients_result.innerHTML = temp_html;

      let values = option.ingredients.value ? option.ingredients.value.split(',') : [];
      values.forEach((id, index) => {
        const target = document.getElementById(`ingredient-${id}`);
        if (!target) return;
        else target.checked = true;
        document.querySelectorAll(`label[for="ingredient-${id}"]`).forEach(el => {
          el.style.color = "rgb(51, 51, 51)";
        })
      })

      //make_pagination_by_func(page, count, func_name, limit)
      ingredients_pagination.innerHTML = make_pagination_by_func(+result.page, +ingredients.count, "searching_ingredients")
    });
  }
</script>
<script>
  document.querySelectorAll('.ingredient_type, .ingredient_effects').forEach(el => {
    el.addEventListener("change", event => {
      searching_ingredients();
    })
  })
</script>
<script>
  function select_ingredient(id) {
    const target = document.getElementById(`ingredient-${id}`);
    const target_name = document.getElementById(`${id}-ingredient_name`).innerText;
    if (!target) return;

    target.checked = !target.checked;
    let values = option.ingredients.value ? option.ingredients.value.split(',') : [];
    let text_list = option.ingredients.value ? ingredients_print.innerText.split(', ') : [];
    let target_id = target.id
    console.log(target_id)
    if (target.checked) {
      values.push(id);
      text_list.push(target_name)
      document.querySelectorAll(`label[for="${target_id}"]`).forEach(el => {
        el.style.color = "rgb(51, 51, 51)";
      })
    } else {
      values.splice(values.indexOf(id), 1);
      text_list.splice(text_list.indexOf(target_name), 1);
      document.querySelectorAll(`label[for="${target_id}"]`).forEach(el => {
        el.style.color = "rgb(128, 128, 128)";
      })
    }
    option.ingredients.value = values.join(',');
    if (values.length) {
      ingredients_print.innerText = text_list.join(', ');
      ingredients_print.title = text_list.join(', ');
    } else {
      ingredients_print.innerText = "<%= __('통합 검색') %>";
      ingredients_print.title = "";
    }
  }
</script>
<script>
  window.addEventListener('load', event => {
    searching_ingredients();
  })
</script>